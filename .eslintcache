[{"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\index.js":"1","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\App.js":"2","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\reportWebVitals.js":"3","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Covid19.js":"4","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Loading.js":"5","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Legend.js":"6","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\tasks\\LoadCountriesTask.js":"7","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\LegendItem.js":"8","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Context\\StateProvider.js":"9","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Context\\reducer.js":"10","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\CountryTable\\CountryTable.js":"11","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\CountryCard\\CountryCard.js":"12","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Map\\CovidMap.js":"13"},{"size":776,"mtime":1607417427214,"results":"14","hashOfConfig":"15"},{"size":173,"mtime":1607497252502,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1006,"mtime":1607497248064,"results":"18","hashOfConfig":"15"},{"size":311,"mtime":1607076707811,"results":"19","hashOfConfig":"15"},{"size":654,"mtime":1607351553249,"results":"20","hashOfConfig":"15"},{"size":197,"mtime":1607077290827,"results":"21","hashOfConfig":"15"},{"size":346,"mtime":1607351657929,"results":"22","hashOfConfig":"15"},{"size":487,"mtime":1607497254031,"results":"23","hashOfConfig":"15"},{"size":387,"mtime":1607497251082,"results":"24","hashOfConfig":"15"},{"size":643,"mtime":1607434630238,"results":"25","hashOfConfig":"15"},{"size":1318,"mtime":1607497250189,"results":"26","hashOfConfig":"15"},{"size":2272,"mtime":1607497244033,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xm3li5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\index.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\App.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\reportWebVitals.js",[],["58","59"],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Covid19.js",["60","61","62"],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Loading.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Legend.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\tasks\\LoadCountriesTask.js",[],["63","64"],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\LegendItem.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Context\\StateProvider.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Context\\reducer.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\CountryTable\\CountryTable.js",["65"],"import React from \"react\";\r\nimport CountryCard from \"../CountryCard/CountryCard\";\r\nimport { useStateValue } from \"../Context/StateProvider\";\r\n\r\nimport \"./CountryTable.css\";\r\n\r\nfunction CountryTable() {\r\n  const [{ countriesData, covidData }] = useStateValue();\r\n\r\n  return (\r\n    <div className=\"countryTable\">\r\n      {countriesData.map((item, i) => {\r\n        if (covidData[item.properties.ISO_A3]) {\r\n          return (\r\n            <CountryCard\r\n              country={item}\r\n              covidData={covidData[item.properties.ISO_A3]}\r\n            />\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n}\r\nexport default CountryTable;\r\n","D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\CountryCard\\CountryCard.js",[],"D:\\Programowanie\\Webowe\\test20 - Covid19CaseMap\\covid_19_map\\src\\components\\Map\\CovidMap.js",["66","67"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./CovidMap.css\";\r\n//import leaflet\r\nimport L from \"leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n//data from context\r\nimport { useStateValue } from \"../Context/StateProvider\";\r\n\r\nfunction CovidMap() {\r\n  const [{ countriesData, covidData }] = useStateValue();\r\n\r\n  function getColor(d) {\r\n    console.log(d);\r\n    return d > 1000000\r\n      ? \"#eb0707\"\r\n      : d > 50000\r\n      ? \"#BD0026\"\r\n      : d > 20000\r\n      ? \"#E31A1C\"\r\n      : d > 10000\r\n      ? \"#FC4E2A\"\r\n      : d > 5000\r\n      ? \"#FD8D3C\"\r\n      : d > 2000\r\n      ? \"#FEB24C\"\r\n      : d > 1000\r\n      ? \"#FED976\"\r\n      : d > 500\r\n      ? \"#c7edb7\"\r\n      : d > 200\r\n      ? \"#f5dd53\"\r\n      : d > 100\r\n      ? \"#a9c730\"\r\n      : d > 50\r\n      ? \"#6fc730\"\r\n      : d > 10\r\n      ? \"#30c744\"\r\n      : \"#FFEDA0\";\r\n  }\r\n\r\n  function stylizacja(features) {\r\n    return {\r\n      fillColor: getColor(\r\n        covidData[features.properties.ISO_A3]?.data[\r\n          covidData[features.properties.ISO_A3]?.data.length - 1\r\n        ].new_cases\r\n      ),\r\n      weight: 2,\r\n      opacity: 1,\r\n      color: \"#38783d\",\r\n      dashArray: \"3\",\r\n      fillOpacity: 0.7,\r\n    };\r\n  }\r\n  const onEachCountry = (features, layer) => {\r\n    const name = features.properties.ADMIN;\r\n    console.log(\r\n      covidData[features.properties.ISO_A3]?.data[\r\n        covidData[features.properties.ISO_A3]?.data.length - 1\r\n      ]\r\n    );\r\n    const total_cases =\r\n      covidData[features.properties.ISO_A3]?.data[\r\n        covidData[features.properties.ISO_A3]?.data.length - 1\r\n      ].new_cases;\r\n    const data =\r\n      covidData[features.properties.ISO_A3]?.data[\r\n        covidData[features.properties.ISO_A3]?.data.length - 1\r\n      ].date;\r\n\r\n    layer.bindPopup(\r\n      `Kraj: ${name} <br/> Stan na dzień: ${data} <hr/> Nowych zachorowań: ${total_cases} <hr/>`\r\n    );\r\n  };\r\n\r\n  // create map\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    mapRef.current = L.map(\"map\", {\r\n      center: [0, 0],\r\n      zoom: 1,\r\n      layers: [\r\n        L.geoJSON(countriesData, {\r\n          onEachFeature: onEachCountry,\r\n          style: stylizacja,\r\n        }),\r\n      ],\r\n    });\r\n  }, []);\r\n\r\n  return <div id=\"map\" />;\r\n}\r\nexport default CovidMap;\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"72","severity":1,"message":"76","line":13,"column":12,"nodeType":"74","messageId":"75","endLine":13,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":28,"column":6,"nodeType":"79","endLine":28,"endColumn":8,"suggestions":"80"},{"ruleId":"68","replacedBy":"81"},{"ruleId":"70","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":12,"column":36,"nodeType":"85","messageId":"86","endLine":12,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":1,"column":36,"nodeType":"74","messageId":"75","endLine":1,"endColumn":44},{"ruleId":"77","severity":1,"message":"87","line":90,"column":6,"nodeType":"79","endLine":90,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'countriesData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],["89"],["90"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'countriesData', 'onEachCountry', and 'stylizacja'. Either include them or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [dispatch]",{"range":"97","text":"98"},"Update the dependencies array to be: [countriesData, onEachCountry, stylizacja]",{"range":"99","text":"100"},[755,757],"[dispatch]",[2205,2207],"[countriesData, onEachCountry, stylizacja]"]